makeCacheMatrix <- function(x = matrix()) {#
	get <- function() x#
}
a <- makeCacheMatrix(matrix(1:9, 3, 3))
a$get()
a <- makeCacheMatrix(matrix(1:9, nrow = 3, ncol = 3))
a$get()
makeCacheMatrix <- function(x = matrix()) {#
	set <- function(y) {#
			x <<- y#
			m <<- NULL#
		}	#
	get <- function() x#
}
a <- makeCacheMatrix(matrix(1:9, nrow = 3, ncol = 3))
a$get()
a <- makeCacheMatrix(1:9, nrow = 3, ncol = 3)
a <- makeCacheMatrix(1:9, 3, 3)
a <- makeCacheMatrix(1:9)
a$get()
?matrix
a <- makeCacheMatrix(c(1,2,3,4))
a$get()
c <- matrix(1:9, 3, 3)
c
solve(c)
?solve
d <- matrix(1:4, 2, 2)
solve(d)
c <- matrix(c(2, 2, 3, 6, 2, 7, 12, 8, 1), 3, 3)
c
solve(c)
e <- matrix(c(1, 1, 1, 0, 0, 0, 0, 0, 0,), 3, 3)
e <- matrix(c(1, 1, 1, 0, 0, 0, 0, 0, 0), 3, 3)
solve(e)
makeCacheMatrix <- function(x = matrix()) {#
	set <- function(y) {#
			x <<- y#
			i <<- NULL#
		}	#
	get <- function() x#
	setinverse <- function(solve) i <<- solve#
    getinverse <- function() i#
        list(set = set, get = get,#
             setinverse = setinverse,#
             getinverse = getinverse)#
#
}
a <- makeCacheMatrix(1:4, 2, 2)
a <- makeCacheMatrix(1:4)
a$get()
a <- makeCacheMatrix(c(2, 3, 6, 7))
a$get()
makeCacheMatrix <- function(x = matrix()) {#
	set <- function(y) {#
			x <<- y#
			i <<- NULL#
		}	#
	get <- function() (x = matrix())#
	setinverse <- function(solve) i <<- solve#
    getinverse <- function() i#
        list(set = set, get = get,#
             setinverse = setinverse,#
             getinverse = getinverse)#
#
}
a <- makeCacheMatrix(c(2, 3, 6, 7))
a$get()
a <- makeCacheMatrix(1:4, 2, 2)
a <- makeCacheMatrix(1:4)
a$get()
a$get()
makeCacheMatrix <- function(x = matrix()) {#
	i <- NULL#
	set <- function(y) {#
			x <<- y#
			i <<- NULL#
		}	#
	get <- function() x#
	setinverse <- function(solve) i <<- solve#
    getinverse <- function() i#
        list(set = set, get = get,#
             setinverse = setinverse,#
             getinverse = getinverse)#
#
}
a <- makeCacheMatrix(1:4)
a$get(a)
a <- makeCacheMatrix(1:4)
a$get()
a <- makeCacheMatrix(1:4, 2, 2)
a <- makeCacheMatrix(1:4)
a$get()
a$get(matrix())
a
a <- makeCacheMatrix(1:4)
a$get()
a <- makeCacheMatrix(1:4, 2, 2)
?matrix
as.matrix(a$get())
a <- makeCacheMatrix()
a$get(1:4)
?is.null
a <- makeCacheMatrix(1:4)
a$get()
cacheSolve(a)
cacheSolve <- function(x, ...) {#
        i <- x$getinverse()#
        if(!is.null(i)) {#
                message("getting cached data")#
                return(i)#
        }#
        data <- x$get()#
        i <- solve(data, ...)#
        x$setinverse(i)#
        i#
#
}
a <- makeCacheMatrix(1:4)
a$get()
cacheSolve(a)
makeCacheMatrix <- function(x = matrix(x, nrow = 1, ncol = 1)) {#
	i <- NULL#
	set <- function(y) {#
			x <<- y#
			i <<- NULL#
		}	#
	get <- function() x#
	setinverse <- function(solve) i <<- solve#
    getinverse <- function() i#
        list(set = set, get = get,#
             setinverse = setinverse,#
             getinverse = getinverse)#
#
}
a <- makeCacheMatrix(1:4, 2, 2)
?matrix
makeCacheMatrix <- function(x = matrix(data, nrow = 1, ncol = 1)) {#
	i <- NULL#
	set <- function(y) {#
			x <<- y#
			i <<- NULL#
		}	#
	get <- function() x#
	setinverse <- function(solve) i <<- solve#
    getinverse <- function() i#
        list(set = set, get = get,#
             setinverse = setinverse,#
             getinverse = getinverse)#
#
}
a <- makeCacheMatrix(1:4, 2, 2)
